https://zerotomastery.io/courses/learn-rust/
https://academy.zerotomastery.io/p/learn-rust

Rust Programming: The Complete Developer's Guide

Learn the Rust programming language from scratch! Learn how to code and build your own real-world applications using Rust so that you can get hired this year. No previous programming or Rust experience needed.

instructor
Taught by: Jayson Lennon
Last updated: August 2023
--------------------------------------------------------------------------------

[Course overview

We guarantee you that this is the most comprehensive and up-to-date Rust programming course that you can find to go from absolute beginner to learning the fundamentals of programming and getting hired as a Rust developer this year.

WHAT YOU'LL LEARN

 Fundamentals of computer programming concepts such as conditional logic, loops, and data transformations
 Foundational computer science topics such as computer memory, program logic, and simple data structures
 Working with data: enums, structs, tuples, expressions, optional data and more
 Solid understanding of all core concepts of the Rust programming language such as: memory, mutability, traits, slices, and generics
 Reading and writing application code in the Rust programming language
 Utilization of the Rust ecosystem to develop applications more efficiently
 How to translate real-life requirements into working applications to solve real-world problems (and that you can add to your portfolio)
 How to make your programs reliable through the use of automated testing and by leveraging features of the Rust language
Students continue to tell us that this course is the perfect complement to the official Rust-Lang Book (which is also a fantastic resource).

Why?

Because this course is focused on learning by doing, not watching endless tutorials with nothing to show for it. You are going to learn Rust by actually coding along and building your own Rust projects.

And you won't be learning Rust alone.

Because by enrolling today, youâ€™ll also get to join our exclusive live online community classroom so that you'll be learning alongside thousands of students, alumni, mentors, TAs and Instructors.

Active. Thriving. Supportive. Helpful. Friendly. Motivating. Essential.

These are just a few of the words students use to describe the ZTM Discord which is also one of the biggest and most active developer communities on Discord.

Most importantly, you will be learning from (and with) Jayson, an industry expert that has actual real-world experience using Rust to build applications for companies.

But I don't know anything about Rust or programming!?

Perfect. This Rust programming course is built for you, the complete beginner who wants to learn how to code without getting overwhelmed by technical jargon and computer science topics.

We will start by teaching you the core programming concepts necessary to get started building applications while also providing a solid foundation for future learning.

The best way to learn programming is to actually DO IT!

That's why you will be writing engaging and interesting programs as quickly as possible.

How, you ask? This course features 30 coding exercises to complement the lectures, and are designed with real-world applications in mind.

Each exercise presents a problem with hints on how to implement a solution, so you can get the practice you need to be successful. The exercises are accompanied with a video demonstrating a possible implementation for the exercise, and line-by-line commentary on how the code accomplishes the task and why it works.

The information in this course is introduced in a thoughtful order, which means you will always be aware of what every bit of code in a program is doing, and how it works the way it does.

There is no need to wait until later in the course, or to study more advanced topics, in order to fully understand the code when presented.

This is accomplished by building up your knowledge through concise, easy to follow lectures that can be reviewed quickly.

By the end of this Rust course, you will learn:

Critical concepts necessary to work with code, without overwhelming detail
Creation of digital solutions for real-world problems
Reading and writing application code in the Rust programming language
Utilization of the Rust ecosystem to efficiently develop applications
Automated testing to enhance the reliability of your solutions
How to make your projects easier to work with through the use of generated documentation
Foundational computer science topics such as computer memory, program logic, and simple data structures
So this is just another course for beginners?

Come on now, is that a serious question?! We're Zero To Mastery. We would never do that to you. We go beyond the basics.

This course isn't just for beginner programmers, but any programmer who wishes to learn Rust.

If you have experience coding in a high level memory-managed language such as Python, JavaScript, or C#, then this course is a great introduction to the Rust programming language (which is a low-level programming language) and its unique memory model and syntax.

We also make sure to cover intermediate and advanced topics so that you can build projects can cut it in the real-world.

Check out the full list of lessons if you haven't already to see everything that is covered.

Like all of our courses, this course isn't about making you just code along without understanding the principles so that when you are done with the course you donâ€™t know what to do other than watch another tutorial... No!

This course will push you and challenge you to go from an absolute beginner to someone that can build your own real-world Rust applications and get hired as a Rust developer ðŸ’ª.

Graduates of Zero To Mastery are now working at Google, Tesla, Amazon, Apple, IBM, JP Morgan, Facebook, Shopify + other top tech companies.

They are also working as top freelancers getting paid while working remotely around the world.

And they come from all different backgrounds, ages, and experiences. Many even started as complete beginners.

So there's no reason it can't be you too.

](https://zerotomastery.io/courses/learn-rust/#Overview)

--------------------------------------------------------------------------------

This course includes:
Access to exclusive ZTM community
Certificate of Completion
Everything you need to go from complete beginner to getting hired as a Rust Developer
Unlimited access to all courses, workshops, career paths and resources
 20 hours
 228 + lessons
 2 Projects
--------------------------------------------------------------------------------

 Prerequisites:
No prior programming knowledge is required. You will learn everything from scratch. Perfect for beginners
A computer (Windows, Mac, or Linux) with an internet connection
--------------------------------------------------------------------------------
Frequently asked questions

Are there any prerequisites for this course?
A computer (Windows, Mac, or Linux) with an internet connection. That's it!
No prior programming knowledge is required. You will learn everything from scratch
A willingness and enthusiasm to learn
This course is absolutely ideal for beginners. While you will learn many more advanced topics as well, this course might not be for you if you already have more than a few years of Rust experience


Who is this course for?
Anyone who wants to gain a complete and practical understanding of the Rust programming language without needing ANY prior programming or Rust knowledge
You want a step-by-step guide to learn how to code using the Rust programming language from scratch all the way to being able to get hired at a top company as a Rust developer
Anyone with some programming experience that wants to learn a more powerful low-level programming language that is much safer and more preferred by big companies
Anyone who wants to learn the most-loved (voted on by 80,000+ developers for 5 years in a rows) and one of the fastest growing programming languages
Students who are frustrated with their current progress with all of the beginner Rust tutorials out there that don't go beyond the basics and don't give you real-world practice or skills you need to actually get hired
Bootcamp or online Rust tutorial graduates that want to go beyond the basics
You want to learn Rust from someone with real-world experience having designed, written, and deployed reliable and secure Rust-powered full-stack web applications



Do you provide a certificate of completion?
We definitely do and they are quite nice. You will also be able to add Zero To Mastery Academy to the education section of your LinkedIn profile as well.

Can I use the course projects in my portfolio?
Yes, youâ€™d be crazy not to in our slightly biased opinion! All projects are downloadable and ready to use the minute you join.
Many of our students tell us the projects they built while following along with our courses were what got them interviews and because they built the projects themselves, they could confidently explain and walk through their work during the interview.
You know what that means? Job offer!

Can I download the videos?
Definitely. You can download any and all lessons for personal use. We do everything we can to make learning easy, fun and accessible. Whether thatâ€™s on your commute, on a flight or just when you have limited access to good WiFi.

Still have more questions about the Academy?
Still have more questions specific to the Academy membership? No problem, we answer some more here.


--------------------------------------------------------------------------------

Course curriculum

To make sure this course is a good fit for you, you can start learning Rust for free right now by clicking any of the PREVIEW links below.
--------------------------------------------------------------------------------

Intoduction
4 lectures
Rust Programming: The Complete Developer's Guideâ€¢2:46

PREVIEW
Exercise: Meet Your Classmates and Instructor

BEGIN
Course Projects + Code + Slides + Cheatsheet

BEGIN
How-to's: Speed up videos, Downloading videos, Subtitles

BEGIN
--------------------------------------------------------------------------------
Rust Fundamentals
13 lectures
Introâ€¢2:26

PREVIEW
Data Typesâ€¢2:25

PREVIEW
Variablesâ€¢6:35

PREVIEW
Functionsâ€¢8:12

PREVIEW
println!â€¢3:04

PREVIEW
Control Flow with Ifâ€¢8:38

PREVIEW
Repetitionâ€¢6:30

PREVIEW
Setup Rustâ€¢4:49

PREVIEW
Commentsâ€¢3:36

PREVIEW
Activity: Functionsâ€¢7:08

PREVIEW
Numeric Types & Basic Arithmeticâ€¢3:36

PREVIEW
Activity: Basic Mathâ€¢5:27

PREVIEW
Unlimited Updates

BEGIN
--------------------------------------------------------------------------------

Making Decisions with Rust
7 lectures
Control Flow: If & Elseâ€¢2:33

PREVIEW
Activity: Logic with If & Elseâ€¢3:59

BEGIN
Activity: Logic with If & Elseâ€¢4:59

BEGIN
Match Expressionâ€¢4:25

BEGIN
Demo: Basic Matchâ€¢3:11

BEGIN
Activity: Basic Match 1â€¢4:03

BEGIN
Activity: Basic Match 2â€¢5:11

BEGIN
--------------------------------------------------------------------------------
Repetition
4 lectures
The Loop Expressionâ€¢4:48

BEGIN
Activity: Loopsâ€¢4:58

BEGIN
The While Loopâ€¢3:22

BEGIN
Activity: While Loopsâ€¢4:45

BEGIN
--------------------------------------------------------------------------------

Working With Data
12 lectures
Enumsâ€¢3:11

BEGIN
Demo: Enumsâ€¢3:43

BEGIN
Activity: Enumsâ€¢6:09

BEGIN
Structsâ€¢2:47

BEGIN
Demo: Structsâ€¢2:51

BEGIN
Activity: Structsâ€¢9:27

BEGIN
Tuplesâ€¢3:31

BEGIN
Demo: Tuplesâ€¢5:49

BEGIN
Activity: Tuplesâ€¢5:55

BEGIN
Expressionsâ€¢3:49

BEGIN
Demo: Expressionsâ€¢5:09

BEGIN
Activity: Expressionsâ€¢7:11

BEGIN
--------------------------------------------------------------------------------

Rust's Memory Model
4 lectures
Intermediate Memory Conceptsâ€¢3:34

BEGIN
Ownershipâ€¢6:17

BEGIN
Demo: Ownershipâ€¢6:06

BEGIN
Activity: Ownershipâ€¢4:57

BEGIN

--------------------------------------------------------------------------------

Data Collections
8 lectures
Implementing Functionalityâ€¢9:20

BEGIN
Activity: Implementing Functionalityâ€¢16:30

BEGIN
The Vector Data Structureâ€¢4:53

BEGIN
Vector Basics & For Loopsâ€¢2:28

BEGIN
Activity: Vectors & For Loopsâ€¢6:47

BEGIN
About Stringsâ€¢4:00

BEGIN
Demo: Stringsâ€¢4:28

BEGIN
Activity: Stringsâ€¢7:23

BEGIN
--------------------------------------------------------------------------------
Expanding Knowledge
11 lectures
Deriving Functionalityâ€¢6:08

BEGIN
Type Annotationsâ€¢4:07

BEGIN
Enums Revisitedâ€¢3:59

BEGIN
Demo: Advanced Matchâ€¢7:57

BEGIN
Activity: Advanced matchâ€¢10:42

BEGIN
The Option Typeâ€¢6:26

BEGIN
Demo: Optionâ€¢4:26

BEGIN
Activity: Optionâ€¢5:01

BEGIN
Generating Documentationâ€¢2:24

BEGIN
Standard Library API docsâ€¢3:33

BEGIN
Activity: Standard Library API docsâ€¢3:46

BEGIN
--------------------------------------------------------------------------------
Fallible Functions
4 lectures
The Result Typeâ€¢4:40

BEGIN
Demo: Resultâ€¢14:16

BEGIN
Activity: Resultâ€¢6:40

BEGIN
Activity: Result & The Question Mark Operatorâ€¢7:51

BEGIN
--------------------------------------------------------------------------------
Data Collection: HashMap
3 lectures
The HashMap Data Structureâ€¢4:20

BEGIN
Working With HashMapsâ€¢5:32

BEGIN
Activity: HashMap Basicsâ€¢8:26

BEGIN

--------------------------------------------------------------------------------

Easier Data Management
10 lectures
Basic Closuresâ€¢4:41

BEGIN
Map Combinatorâ€¢5:01

BEGIN
Activity: Map Combinatorâ€¢8:07

BEGIN
Option Combinator Patternâ€¢7:49

BEGIN
Activity: Option Combinatorsâ€¢4:23

BEGIN
Using Iteratorsâ€¢9:12

BEGIN
Activity: Using Iteratorsâ€¢5:14

BEGIN
Rangesâ€¢1:58

BEGIN
If..let..elseâ€¢2:58

BEGIN
while..letâ€¢2:06

BEGIN
--------------------------------------------------------------------------------
Managing Code
8 lectures
Inline Modulesâ€¢4:02

BEGIN
Activity: Inline Modulesâ€¢10:17

BEGIN
Testingâ€¢6:52

BEGIN
Activity: Testingâ€¢7:42

BEGIN
External Cratesâ€¢6:28

BEGIN
Activity: Adding an External Crateâ€¢4:44

BEGIN
External Modulesâ€¢10:27

BEGIN
Activity: External Modulesâ€¢9:54

BEGIN

--------------------------------------------------------------------------------
Milestone Project: Billing Application
9 lectures
Gathering User Inputâ€¢14:21

BEGIN
Activity: Gathering User Inputâ€¢22:47

BEGIN
Mini Project: Introductionâ€¢2:44

BEGIN
Retrieve User Inputâ€¢3:16

BEGIN
Creating The Main Menu Loopâ€¢7:14

BEGIN
Required Data Structuresâ€¢4:10

BEGIN
Implementation: Adding & Viewing Billsâ€¢13:00

BEGIN
Implementation: Removing Billsâ€¢6:50

BEGIN
Implementation: Editing Billsâ€¢9:15

BEGIN

--------------------------------------------------------------------------------
Shared Functionality
15 lectures
Traitsâ€¢4:54

BEGIN
Demo: Traitsâ€¢4:58

BEGIN
Activity: Traitsâ€¢5:58

BEGIN
Implementing The "Default" Traitâ€¢2:28

BEGIN
Generics & Functionsâ€¢13:54

BEGIN
Demo: Generics & Functionsâ€¢6:22

BEGIN
Activity: Generics & Functionsâ€¢5:52

BEGIN
Generic Structuresâ€¢10:06

BEGIN
Generic Structures & impl Blocksâ€¢7:58

BEGIN
Demo: Generics & Structuresâ€¢6:38

BEGIN
Activity: Generics & Structuresâ€¢10:18

BEGIN
Advanced Memory Conceptsâ€¢8:50

BEGIN
Trait Objectsâ€¢11:35

BEGIN
Demo: Trait Objectsâ€¢7:26

BEGIN
Activity: Trait Objectsâ€¢8:35

BEGIN
--------------------------------------------------------------------------------

Lifetimes
4 lectures
Ownership & Lifetimesâ€¢9:03

BEGIN
Demo: Lifetimesâ€¢8:32

BEGIN
Activity: Lifetimes & Structuresâ€¢10:49

BEGIN
Activity: Lifetimes & Functionsâ€¢4:47

BEGIN

--------------------------------------------------------------------------------
Improving Program Reliability
16 lectures
Custom Error Typesâ€¢8:51

BEGIN
Demo: Custom Error Typesâ€¢8:53

BEGIN
Activity: Creating a Custom Errorâ€¢9:01

BEGIN
constâ€¢2:20

BEGIN
New Type Patternâ€¢5:07

BEGIN
Activity: Utilizing The New Type Patternâ€¢8:08

BEGIN
TypeState Patternâ€¢4:13

BEGIN
Demo: TypeState Patternâ€¢11:48

BEGIN
Activity: TypeState Patternâ€¢7:41

BEGIN
Demo: Match Guards & Bindingâ€¢6:22

BEGIN
Activity: Match Guards & Bindingâ€¢8:45

BEGIN
Arrays & Slicesâ€¢7:48

BEGIN
Slice Patternsâ€¢5:53

BEGIN
Activity: Slicesâ€¢5:41

BEGIN
Type Aliasesâ€¢5:22

BEGIN
Exercise: Imposter Syndromeâ€¢2:55

BEGIN
--------------------------------------------------------------------------------
Type Conversions
5 lectures
From/Intoâ€¢8:17

BEGIN
TryFrom/TryIntoâ€¢3:56

BEGIN
Demo: From/Intoâ€¢7:58

BEGIN
Activity: TryFrom/TryIntoâ€¢10:15

BEGIN
Numeric Limits & Numeric Type Castingâ€¢7:59

BEGIN

--------------------------------------------------------------------------------
Parallel Execution
8 lectures
Passing Closures to Functionsâ€¢10:53

BEGIN
Threadsâ€¢6:44

BEGIN
Demo: Threadsâ€¢7:39

BEGIN
Activity: Threadsâ€¢4:29

BEGIN
Channelsâ€¢8:13

BEGIN
Demo: Channelsâ€¢5:04

BEGIN
Demo: Bidirectional Threaded Communicationâ€¢7:28

BEGIN
Activity: Channelsâ€¢9:23

BEGIN
--------------------------------------------------------------------------------
Shared Ownership
8 lectures
Smart Pointersâ€¢4:07

BEGIN
Interior Mutability: Cell & RefCellâ€¢8:06

BEGIN
Demo: Smart Pointers & RefCellâ€¢6:00

BEGIN
Activity: Smart Pointers & ReffCellâ€¢9:14

BEGIN
Arc/Mutexâ€¢8:38

BEGIN
Threading: Deadlocksâ€¢6:27

BEGIN
Demo: Arc/Mutexâ€¢4:15

BEGIN
Activity: Arc/Mutexâ€¢5:13

BEGIN
--------------------------------------------------------------------------------
Standard Library Tour
10 lectures
Enum Equality & Orderingâ€¢3:42

BEGIN
Struct Equality & Orderingâ€¢4:23

BEGIN
Operator Overloadingâ€¢7:24

BEGIN
Iterators: Implementing Iterator for a Structâ€¢3:31

BEGIN
Implement IntoIteratorâ€¢7:58

BEGIN
Demo: Implementing IntoIteratorâ€¢9:23

BEGIN
Activity: Implementing Iteratorâ€¢5:45

BEGIN
Iterators: Custom Iteration Logicâ€¢8:07

BEGIN
Helpful Macrosâ€¢7:48

BEGIN
Managing Integer Overflowâ€¢5:39

BEGIN
--------------------------------------------------------------------------------
Other Language Features
5 lectures
Turbofishâ€¢2:29

BEGIN
Loop Labelsâ€¢2:44

BEGIN
Loop Expressionsâ€¢2:34

BEGIN
Struct Update Syntaxâ€¢2:47

BEGIN
Escape Sequences & Raw Stringsâ€¢4:17

BEGIN
--------------------------------------------------------------------------------
Development Experience
3 lectures
rust-analyzerâ€¢4:18

BEGIN
clippyâ€¢2:31

BEGIN
error-lensâ€¢1:27

BEGIN
--------------------------------------------------------------------------------
Crate Roundup
11 lectures
dotenvyâ€¢2:32

BEGIN
serdeâ€¢3:56

BEGIN
randâ€¢4:20

BEGIN
cachedâ€¢4:16

BEGIN
regexâ€¢5:17

BEGIN
chronoâ€¢7:31

BEGIN
strumâ€¢4:24

BEGIN
derive_moreâ€¢6:32

BEGIN
rayonâ€¢4:00

BEGIN
tracingâ€¢6:29

BEGIN
color-eyreâ€¢4:15

BEGIN
--------------------------------------------------------------------------------
Resources
1 lectures
Helpful Links for Your Rust Career

BEGIN
--------------------------------------------------------------------------------
Final Project: Clip Stash
53 lectures
Async Primerâ€¢7:51

BEGIN
Introduction To The Projectâ€¢1:03

BEGIN
Architectureâ€¢3:38

BEGIN
Walkthrough & Domain Structure Modulesâ€¢7:25

BEGIN
Domain Errorsâ€¢6:02

BEGIN
Domain Implementation: Content & Hitsâ€¢6:36

BEGIN
Domain Implementation: Passwordâ€¢6:27

BEGIN
Domain Implementation: Shortcodeâ€¢7:32

BEGIN
Domain Implementation: Titleâ€¢2:40

BEGIN
Domain Implementation: Timeâ€¢6:48

BEGIN
Domain Implementation: Expire & Postedâ€¢5:03

BEGIN
Domain Implementation: Dbld & Clipldâ€¢6:00

BEGIN
Recap & Error Correctionâ€¢5:18

BEGIN
Database Type Aliasesâ€¢7:25

BEGIN
Database Wrapperâ€¢4:12

BEGIN
Database Modelâ€¢11:56

BEGIN
SQL Primerâ€¢4:25

BEGIN
sqlx cliâ€¢1:42

BEGIN
Database Query: Get Clipâ€¢6:55

BEGIN
Database Query: New Clipâ€¢7:06

BEGIN
Database Query: Update Clipâ€¢3:51

BEGIN
Recap & Next Stepsâ€¢4:18

BEGIN
Service Layer: Errorsâ€¢7:34

BEGIN
Service Layer: Get Clipâ€¢11:22

BEGIN
Service Layer: Add & Update Clipâ€¢7:21

BEGIN
Templatesâ€¢2:00

BEGIN
Page Contextsâ€¢6:15

BEGIN
Template Rendererâ€¢14:30

BEGIN
Rocket Frameworkâ€¢4:28

BEGIN
Initial Web Setupâ€¢3:46

BEGIN
Web Formsâ€¢9:19

BEGIN
Homepage, Catchers, and Routerâ€¢5:45

BEGIN
Rocket Configurationâ€¢3:34

BEGIN
Running the Serverâ€¢9:34

BEGIN
Retrieving a Clipâ€¢11:05

BEGIN
Saving a Clipâ€¢13:14

BEGIN
Password Protected Clipsâ€¢7:12

BEGIN
Raw Clipsâ€¢5:31

BEGIN
Hit Counterâ€¢1:39

BEGIN
Hit Counter - Service & Dataâ€¢11:38

BEGIN
Hit Counter Implementation part 1â€¢12:27

BEGIN
Hit Counter Implementation part 2â€¢5:58

BEGIN
Database Migrationâ€¢1:11

BEGIN
API: Keys & Error Handlingâ€¢9:19

BEGIN
API: Service & Queriesâ€¢7:10

BEGIN
API: Request Guardâ€¢6:43

BEGIN
API: Routingâ€¢12:06

BEGIN
API Client: Cargo.toml & CLI Optionsâ€¢8:38

BEGIN
API Client: Get Clip & New Clipâ€¢7:42

BEGIN
API Client: Update Clip & Making Requestsâ€¢6:07

BEGIN
Maintenance Tasksâ€¢7:06

BEGIN
Testing: Databaseâ€¢9:14

BEGIN
Testing: HTTP Routesâ€¢10:00

BEGIN

--------------------------------------------------------------------------------
Declarative Macros
14 lectures
Overviewâ€¢6:54

BEGIN
Detailâ€¢15:39

BEGIN
Demo: impl Blocksâ€¢6:38

BEGIN
Activity: Control Flowâ€¢2:51

BEGIN
Activity: impl Blocksâ€¢2:34

BEGIN
Repetitionsâ€¢8:46

BEGIN
Demo: Repetitionsâ€¢3:14

BEGIN
Activity: HashMapâ€¢5:22

BEGIN
Demo: Syntax Extensionâ€¢8:52

BEGIN
Activity: Syntax Extensionâ€¢4:11

BEGIN
Activity: Generating Testsâ€¢6:31

BEGIN
Activity: Function Tracerâ€¢4:47

BEGIN
Demo: Checked Configâ€¢13:18

BEGIN
Demo: Recursive tt Muncherâ€¢6:40

BEGIN
--------------------------------------------------------------------------------
Where To Go From Here?
6 lectures
Thank You!â€¢1:17

BEGIN
Review This Course!

BEGIN
Become An Alumni

BEGIN
Learning Guideline

BEGIN
LinkedIn Endorsements

BEGIN
Coding Challenges

BEGIN

